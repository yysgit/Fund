<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yys.fund.mapper.UFundTransactionMapper">


    <!--查询分页信息列表-->
    <select id="findFundTransactionPurchaseList" resultType="java.util.Map" parameterType="java.util.Map">
        select uftp.fund_info_code       as fundInfoCode,
               uuf.fund_info_name_number as fundInfoNameNumber,
               ffi.fund_name             as fundName,
               uftp.purchase_time        as purchaseTime,
               uftp.purchase_commission  as purchaseCommission,
               uftp.purchase_share       as purchaseShare,
               uftp.purchase_net_worth   as purchaseNetWorth,
               uftp.purchase_amount      as purchaseAmount,
               uftp.yield                as yield,
               uftp.income_amount        as incomeAmount,
               uftp.today_time           as todayTime,
               uftp.today_net_worth      as todayNetWorth
        from u_fund_transaction_purchase uftp
                 left join f_fund_info ffi on ffi.fund_code = uftp.fund_info_code
                 left join u_user_fund uuf on uuf.fund_info_code = uftp.fund_info_code and uftp.user_id = uuf.user_id
        where uftp.user_id = #{userId}
          and uftp.state = 0
        order by uftp.yield, uftp.purchase_time desc limit #{page}, #{limit};
    </select>
    <select id="findFundTransactionPurchaseCount" resultType="java.lang.Integer" parameterType="java.util.Map">
        select count(*)
        from u_fund_transaction_purchase uftp
        where uftp.user_id = #{userId}
          and uftp.state = 0
    </select>

    <insert id="addUserFundTtransactionPurchase" parameterType="java.util.Map">
        insert into u_fund_transaction_purchase (user_id, fund_info_code, purchase_time, purchase_amount)
        values (#{userId}, #{fundCode}, #{purchaseTime}, #{purchaseAmount});
    </insert>


    <!--更新用户买入净值信息-->
    <update id="updateFundTransactionPurchaseForTask">
        UPDATE u_fund_transaction_purchase uftp
        SET uftp.purchase_net_worth = (select ffnw.fund_net_worth
                                       from f_fund_net_worth ffnw
                                       where uftp.fund_info_code = ffnw.fund_info_code
                                         and uftp.purchase_time = ffnw.fund_day),
            uftp.purchase_share     =(select uftp.purchase_amount / ffnw.fund_net_worth
                                      from f_fund_net_worth ffnw
                                      where uftp.fund_info_code = ffnw.fund_info_code
                                        and uftp.purchase_time = ffnw.fund_day)

        WHERE uftp.purchase_net_worth is null
          and EXISTS(select ffnw.fund_net_worth
                     from f_fund_net_worth ffnw
                     where uftp.fund_info_code = ffnw.fund_info_code
                       and uftp.purchase_time = ffnw.fund_day)

    </update>

    <!--更新用户买入净值信息-->
    <update id="updateFundTransactionPurchaseForTemp">
        UPDATE u_fund_transaction_purchase uftp
        SET uftp.today_net_worth = (select ffnwt.fund_net_worth
                                    from f_fund_net_worth_temp ffnwt
                                    where uftp.fund_info_code = ffnwt.fund_info_code),
            uftp.today_time      =(select ffnw.fund_day
                                   from f_fund_net_worth_temp ffnw
                                   where uftp.fund_info_code = ffnw.fund_info_code),
            uftp.yield           =(select (ffnwt.fund_net_worth - uftp.purchase_net_worth) / ffnwt.fund_net_worth
                                   from f_fund_net_worth_temp ffnwt
                                   where uftp.fund_info_code = ffnwt.fund_info_code),
            uftp.income_amount   =(select (ffnwt.fund_net_worth - uftp.purchase_net_worth) * purchase_share
                                   from f_fund_net_worth_temp ffnwt
                                   where uftp.fund_info_code = ffnwt.fund_info_code)

        WHERE uftp.fund_info_code =#{fundInfoCode}
          and uftp.purchase_net_worth is not null
          and EXISTS(select ffnwt.fund_net_worth
                     from f_fund_net_worth_temp ffnwt
                     where uftp.fund_info_code = ffnwt.fund_info_code
            )
    </update>

</mapper>