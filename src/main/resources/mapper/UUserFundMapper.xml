<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yys.fund.mapper.UUserFundMapper">


    <insert id="addUserFund" parameterType="java.util.Map">
        insert into u_user_fund (user_id, fund_info_name_number, fund_info_code, create_time)
        values (#{userId}, #{fundInfoNameNumber}, #{fundInfoCode}, now());
    </insert>

    <select id="findUserFundList" resultType="java.util.Map" parameterType="java.util.Map">
        select uuf.id,
               uuf.fund_info_name_number AS fundInfoNameNumber,
               ffi.fund_code             AS fundCode,
               ffi.fund_name             AS fundName,
               ffi.max_net_worth_date    AS maxNetWorthDate,
               ffi.max_net_worth         AS maxNetWorth,
               ffi.id                    AS fundInfoId,
               ffi.fund_type_id          AS fundTypeId,
               fft.fund_type_name        AS fundTypeName,
               fft.fund_type_number      AS fundTypeNumber,
               ffi.sorting,
               ffnwt.id                  AS fundNetWorthTempId,
               ffi.volatility_value      AS volatilityValue
        from u_user_fund uuf
                 left join db_user dbu on dbu.id = uuf.user_id
                 left join f_fund_info ffi on ffi.fund_code = uuf.fund_info_code
                 left join f_fund_type fft on ffi.fund_type_id = fft.id
                 left join f_fund_net_worth_temp ffnwt on uuf.fund_info_code = ffnwt.fund_info_code
        where uuf.delete_status = 0
          and uuf.user_id = #{userId}
        order by ffi.sorting, ffi.create_time limit #{page}, #{limit};
    </select>
    <select id="findUserFundListCount" resultType="java.lang.Integer" parameterType="java.util.Map">
        select count(*)
        from u_user_fund
        where delete_status = 0
          and user_id = #{userId}
    </select>

    <!--    删除文章菜单-->
    <update id="deleteUserFund" parameterType="java.util.Map">
        update u_user_fund
        set update_time   = now()
          , delete_status = #{deleteStatus}
        where id = #{id}
          and user_id = #{userId}
    </update>

</mapper>