<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yys.fund.mapper.UUserFundMapper">


    <insert id="addUserFund" parameterType="java.util.Map">
        insert into u_user_fund (user_id, fund_info_name_number, fund_info_code, create_time)
        values (#{userId}, #{fundInfoNameNumber}, #{fundInfoCode}, now());
    </insert>


    <select id="fundUserFundIncomeStatistics" resultType="java.util.Map" parameterType="java.util.Map">
        select (
                   SELECT sum(amont.incomeAmount)
                   FROM (
                            SELECT sum(income_amount) AS incomeAmount,
                                   sell_time
                            FROM u_fund_transaction_sell
                            where user_id = #{userId}
                            GROUP BY sell_time
                        ) amont
                   where sell_time >= #{income_1}
               ) AS income_1,


               (
                   SELECT sum(amont.incomeAmount)
                   FROM (
                            SELECT sum(income_amount) AS incomeAmount,
                                   sell_time
                            FROM u_fund_transaction_sell
                            where user_id = #{userId}
                            GROUP BY sell_time
                        ) amont
                   where sell_time >= #{income_2}
               ) AS income_2,

               (
                   SELECT sum(amont.incomeAmount)
                   FROM (
                            SELECT sum(income_amount) AS incomeAmount,
                                   sell_time
                            FROM u_fund_transaction_sell
                            where user_id = #{userId}
                            GROUP BY sell_time
                        ) amont
                   where sell_time >= #{income_3}
               ) AS income_3,

               (
                   SELECT sum(amont.incomeAmount)
                   FROM (
                            SELECT sum(income_amount) AS incomeAmount,
                                   sell_time
                            FROM u_fund_transaction_sell
                            where user_id = #{userId}
                            GROUP BY sell_time
                        ) amont
                   where #{income_3} > sell_time
                     and sell_time >= #{income_4}
               ) AS income_4,


               (
                   SELECT sum(amont.incomeAmount)
                   FROM (
                            SELECT sum(income_amount) AS incomeAmount,
                                   sell_time
                            FROM u_fund_transaction_sell
                            where user_id = #{userId}
                            GROUP BY sell_time
                        ) amont
                   where sell_time >= #{income_5}
               ) AS income_5,
               (
                   SELECT sum(amont.incomeAmount)
                   FROM (
                            SELECT sum(income_amount) AS incomeAmount,
                                   sell_time
                            FROM u_fund_transaction_sell
                            where user_id = #{userId}
                            GROUP BY sell_time
                        ) amont
               ) AS income_6,
               (
                   SELECT sum(amont.incomeAmount)
                   FROM (
                            SELECT sum(today_profit_amount) AS incomeAmount
                            FROM u_user_fund
                            where user_id = #{userId}
                        ) amont
               ) AS income_7,
               (
                   SELECT sum(amont.incomeAmount)
                   FROM (
                            SELECT sum(new_amount) AS incomeAmount
                            FROM u_user_fund
                            where user_id = #{userId}
                        ) amont
               ) AS income_8,
               (
                   SELECT sum(amont.incomeAmount)
                   FROM (
                            SELECT sum(profit_amount) AS incomeAmount
                            FROM u_user_fund
                            where user_id = #{userId}
                        ) amont
               ) AS income_9,
               (
                   SELECT sum(amont.incomeAmount)
                   FROM (
                            SELECT sum(total_amount) AS incomeAmount
                            FROM u_user_fund
                            where user_id = #{userId}
                        ) amont
               ) AS income_10
        from db_user
        where id = #{userId}
    </select>
    <select id="fundUserFundTradeStatistics" resultType="java.util.Map" parameterType="java.util.Map">
        select
            (
                SELECT sum(amont.sellAmount)
                FROM (
                         SELECT sum(uftp.purchase_amount_all) AS sellAmount,
                                ufts.sell_time
                         FROM u_fund_transaction_sell ufts
                         left join u_fund_transaction_purchase uftp on uftp.id = ufts.purchase_id
                         where ufts.user_id = #{userId}
                         GROUP BY ufts.sell_time
                     ) amont
                where sell_time >= #{trade_0}
            ) AS sell_0,
            (SELECT sum(amont.purchaseAmount)
             FROM (
                      SELECT sum(purchase_amount_all) AS purchaseAmount,
                             purchase_time
                      FROM u_fund_transaction_purchase
                      where user_id = #{userId}
                      GROUP BY purchase_time
                  ) amont
             where purchase_time >= #{trade_0}
            ) AS purchase_0,

               (
                   SELECT sum(amont.sellAmount)
                   FROM (
                            SELECT sum(sell_amount - income_amount) AS sellAmount,
                                   sell_time
                            FROM u_fund_transaction_sell
                            where user_id = #{userId}
                            GROUP BY sell_time
                        ) amont
                   where sell_time >= #{trade_1}
               ) AS sell_1,
               (SELECT sum(amont.purchaseAmount)
                FROM (
                         SELECT sum(purchase_amount_all) AS purchaseAmount,
                                purchase_time
                         FROM u_fund_transaction_purchase
                         where user_id = #{userId}
                         GROUP BY purchase_time
                     ) amont
                where purchase_time >= #{trade_1}
                   and #{trade_0} > purchase_time
               ) AS purchase_1,

               (SELECT sum(amont.sellAmount)
                FROM (
                         SELECT sum(sell_amount - income_amount) AS sellAmount,
                                sell_time
                         FROM u_fund_transaction_sell
                         where user_id = #{userId}
                         GROUP BY sell_time
                     ) amont
                where sell_time >= #{trade_2}
               ) AS sell_2,
               (SELECT sum(amont.purchaseAmount)
                FROM (
                         SELECT sum(purchase_amount_all) AS purchaseAmount,
                                purchase_time
                         FROM u_fund_transaction_purchase
                         where user_id = #{userId}
                         GROUP BY purchase_time
                     ) amont
                where purchase_time >= #{trade_2}
               ) AS purchase_2,

               (SELECT sum(amont.sellAmount)
                FROM (
                         SELECT sum(sell_amount - income_amount) AS sellAmount,
                                sell_time
                         FROM u_fund_transaction_sell
                         where user_id = #{userId}
                         GROUP BY sell_time
                     ) amont
                where sell_time >= #{trade_3}
               ) AS sell_3,
               (SELECT sum(amont.purchaseAmount)
                FROM (
                         SELECT sum(purchase_amount_all) AS purchaseAmount,
                                purchase_time
                         FROM u_fund_transaction_purchase
                         where user_id = #{userId}
                         GROUP BY purchase_time
                     ) amont
                where purchase_time >= #{trade_3}
               ) AS purchase_3,


               (SELECT sum(amont.sellAmount)
                FROM (
                         SELECT sum(sell_amount - income_amount) AS sellAmount,
                                sell_time
                         FROM u_fund_transaction_sell
                         where user_id = #{userId}
                         GROUP BY sell_time
                     ) amont
                where #{trade_3} > sell_time
                  and sell_time >= #{trade_4}
               ) AS sell_4,
               (SELECT sum(amont.purchaseAmount)
                FROM (
                         SELECT sum(purchase_amount_all) AS purchaseAmount,
                                purchase_time
                         FROM u_fund_transaction_purchase
                         where user_id = #{userId}
                         GROUP BY purchase_time
                     ) amont
                where #{trade_3} >= purchase_time
                  and purchase_time >= #{trade_4}
               ) AS purchase_4,

               (SELECT sum(amont.sellAmount)
                FROM (
                         SELECT sum(sell_amount - income_amount) AS sellAmount,
                                sell_time
                         FROM u_fund_transaction_sell
                         where user_id = #{userId}
                         GROUP BY sell_time
                     ) amont
                where sell_time >= #{trade_5}
               ) AS sell_5,
               (SELECT sum(amont.purchaseAmount)
                FROM (
                         SELECT sum(purchase_amount_all) AS purchaseAmount,
                                purchase_time
                         FROM u_fund_transaction_purchase
                         where user_id = #{userId}
                         GROUP BY purchase_time
                     ) amont
                where purchase_time >= #{trade_5}
               ) AS purchase_5,
               (SELECT sum(amont.sellAmount)
                FROM (
                         SELECT sum(sell_amount - income_amount) AS sellAmount,
                                sell_time
                         FROM u_fund_transaction_sell
                         where user_id = #{userId}
                         GROUP BY sell_time
                     ) amont
               ) AS sell_6,
               (SELECT sum(amont.purchaseAmount)
                FROM (
                         SELECT sum(purchase_amount_all) AS purchaseAmount,
                                purchase_time
                         FROM u_fund_transaction_purchase
                         where user_id = #{userId}
                         GROUP BY purchase_time
                     ) amont
               ) AS purchase_6
        from db_user
        where id = #{userId}
    </select>

    <select id="findUserFundList" resultType="java.util.Map" parameterType="java.util.Map">
        select uuf.id,
               uuf.fund_info_name_number AS fundInfoNameNumber,
               ffi.fund_code             AS fundCode,
               ffi.fund_name             AS fundName,
               ffi.max_net_worth_date    AS maxNetWorthDate,
               ffi.max_net_worth         AS maxNetWorth,
               ffi.id                    AS fundInfoId,
               ffi.fund_type_id          AS fundTypeId,
               fft.fund_type_name        AS fundTypeName,
               fft.fund_type_number      AS fundTypeNumber,
               ffi.sorting,
               ffnwt2.id                  AS fundNetWorthTempId,
               ffi.volatility_value      AS volatilityValue,
               ffnwt2.level_number        as levelNumber,
               uftp.yield                as yield,
               IF ( ffnwt.rise_fall is null, 0, ffnwt.rise_fall ) as riseFall,
               uuf.total_amount          as totalAmount,
               uuf.total_share           as totalShare,
               uuf.cumulative_gain           as cumulativeGain,
               uuf.new_amount            as newAmount,
               uuf.profit_amount         as profitAmount,
               uuf.today_profit_amount   as todayProfitAmount,
               uuf.purchase_rate   as purchaseRate,
               uuf.sell_rate   as sellRate,
               uuf.today_money_expect as todayMoneyExpect,
               uuf.today_money_purchased as todayMoneyPurchased
        from u_user_fund uuf
                 left join db_user dbu on dbu.id = uuf.user_id
                 left join f_fund_info ffi on ffi.fund_code = uuf.fund_info_code
                 left join f_fund_type fft on ffi.fund_type_id = fft.id
                 left join f_fund_net_worth_temp ffnwt on uuf.fund_info_code = ffnwt.fund_info_code and ffnwt.fund_day=CURRENT_DATE()
                 left join f_fund_net_worth_temp ffnwt2 on uuf.fund_info_code = ffnwt2.fund_info_code
                 left join u_fund_transaction_purchase uftp on uuf.fund_info_code = uftp.fund_info_code
            and uftp.user_id = #{userId}
            and uftp.state = 0
            and uftp.minimum_new_worth = 1

        where uuf.delete_status = 0
          and uuf.user_id = #{userId}
        order by ffi.sorting, uuf.fund_info_name_number, ffi.sorting, ffi.create_time limit #{page}, #{limit};
    </select>
    <select id="findUserFundListCount" resultType="java.lang.Integer" parameterType="java.util.Map">
        select count(*)
        from u_user_fund
        where delete_status = 0
          and user_id = #{userId}
    </select>

    <!--    删除我的基金-->
    <delete id="deleteUserFund" parameterType="java.util.Map">
        delete
        from u_user_fund
        where id = #{id}
          and user_id = #{userId}
    </delete>

    <update id="updateUserFund" parameterType="java.util.Map">
        update u_user_fund
        set update_time           = now()
          , fund_info_name_number = #{fundInfoNameNumber}
          , purchase_rate = #{purchaseRate}
          , sell_rate = #{sellRate}
        where id = #{id}
          and user_id = #{userId}
    </update>

</mapper>
